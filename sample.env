# Environment variable file for the JPO CV Manager API deployment through docker-compose
DOCKER_HOST_IP=
WEBAPP_HOST_IP=${DOCKER_HOST_IP}
API_HOST_IP=${DOCKER_HOST_IP}
KC_HOST_IP=${DOCKER_HOST_IP}
MONGO_HOST_IP=${DOCKER_HOST_IP}
PG_DB_IP=${DOCKER_HOST_IP}

# PostgreSQL Database connection information (connects over websocket)
PG_DB_PORT=5432
PG_DB_USER=postgres
# If the PG_DB_PASS variable has special characters, make sure to wrap it in single quotes
PG_DB_PASS=

# Keycloak authentication crendentials
KEYCLOAK_ADMIN="admin"
KEYCLOAK_ADMIN_PASSWORD=

# Keycloak Parameters - to generate secret key use a password generator such as: https://www.avast.com/en-us/random-password-generator#pc and set the length to 32
KEYCLOAK_REALM="cvmanager"
KEYCLOAK_API_CLIENT_ID="cvmanager-api"
KEYCLOAK_API_CLIENT_SECRET_KEY=

# GCP OAuth2.0 client ID for SSO authentication in keycloak - if not specified the google SSO will not be functional
GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=

# Mapbox token for map rendering in the webapp
MAPBOX_TOKEN=

# Set to either "BIGQUERY" or "MONGODB" depending on message count location.
COUNTS_DB_TYPE="BIGQUERY"

# MongoDB variables
MONGO_DB_URI=mongodb://${MONGO_HOST_IP}:27017/?directConnection=true
MONGO_DB_NAME="ODE"
MONGO_GEO_COLLECTION="OdeGeo"

# Set these variables if using either "MongoDB" or "BigQuery"
# COUNTS_DB_NAME: Used for V2X message counts
COUNTS_DB_NAME="OdeMessageOutputCounts"
# COUNTS_MSG_TYPES: Comma seperated list of message types
COUNTS_MSG_TYPES='["TIM","BSM","SPAT","PSM","MAP"]'
GEO_MSG_TYPES='["BSM"]'
BSM_DB_NAME=
PSM_DB_NAME=
SSM_DB_NAME= 
SRM_DB_NAME= 

# Deprecated function for externally handling SSH
RSU_REST_ENDPOINT= 

# WZDx API key and endpoint for pulling WZDx data into the CV Manager
WZDX_API_KEY= 
WZDX_ENDPOINT= 

# Python timezone for the CV Manager (You can list pytz timezones with the command 'pytz.all_timezones')
TIMEZONE="US/Mountain"

# Levels are "DEBUG", "INFO", "WARNING", and "ERROR"
API_LOGGING_LEVEL="INFO"

# Supported log levels are "ALL", "DEBUG", "ERROR", "FATAL", "INFO", "OFF", "TRACE" and "WARN"
KC_LOGGING_LEVEL="INFO"


# ADDONS ENV VARIABLES

# Levels are "DEBUG", "INFO", "WARNING", and "ERROR"
ADDONS_LOGGING_LEVEL="INFO"

# GCP Project ID and service account JSON key file location (mount as volume or secret)
# Used for: jpo_iss_health_checker & jpo_count_metric
PROJECT_ID=
GOOGLE_APPLICATION_CREDENTIALS=

# ENV variables required for: jpo_map_query & jpo_count_metric
KAFKA_HOST_IP=${DOCKER_HOST_IP}
KAFKA_BROKERS=${KAFKA_HOST_IP}:9092
# Set to "true" if the ODE is running with Confluent Kafka topics, leave as "false" for a local kafka deployment
# If confluent is set to "true" the key and secret variable must be filled out
CONFLUENT="false"
CONFLUENT_KEY=
CONFLUENT_SECRET=

# ENV variables required for: jpo_count_metric
INPUT_COUNTS_MONGO_COLLECTION_NAME= 'OdeMessageInputCounts'
OUTPUT_COUNTS_MONGO_COLLECTION_NAME= 'OdeMessageOutputCounts'
KAFKA_BIGQUERY_TABLENAME= 
PUBSUB_BIGQUERY_TABLENAME=

# ENV variables for: jpo_rsu_ping_fetch
ZABBIX_HOST_IP=${DOCKER_HOST_IP}
ZABBIX_ENDPOINT=http://${ZABBIX_HOST_IP}:8080/api_jsonrpc.php
ZABBIX_USER=
ZABBIX_PASSWORD=
ZABBIX_STALE_PERIOD=24

# ENV variables for: jpo_iss_health_checker
ISS_API_KEY=
ISS_API_KEY_NAME=
ISS_PROJECT_ID=
ISS_SCMS_TOKEN_REST_ENDPOINT=
ISS_SCMS_VEHICLE_REST_ENDPOINT=

# ENV variables for: jpo_geo_msg_query
# MONGO_TTL defines the ttl duration in days for the geospatial query collection
MONGO_TTL=30